type Void = #native ptr

type Bool = #native u8

type Bits8 = #native u8
type Bits16 = #native u16
type Bits32 = #native u32
type Bits64 = #native u64
type Bits128 = #native u128

type Uint8 = #native u8
type Uint16 = #native u16
type Uint32 = #native u32
type Uint64 = #native u64
type Uint128 = #native u128

type Int8 = #native i8
type Int16 = #native u16
type Int32 = #native i32
type Int64 = #native i64
type Int128 = #native i128

type Float8 = #native f8
type Float16 = #native f16
type Float32 = #native f32
type Float64 = #native f64
type Float80 = #native f80
type Float128 = #native f128

struct Array[A](length: Int64, stride: Int64)
// => type::Array[$A]
foreign fn Array[A](xs: A*): Array[A]
// => ctor::Array[$A](A*)

struct String(length: Int64)
// => type::String
// => ctor::String(Word)

struct P1[A](a: A)
struct P2[A, B](a: A, b: B)